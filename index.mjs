// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import{isPrimitive as s}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array@v0.1.1-esm/index.mjs";import{isPrimitive as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-shape2strides@v0.1.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-strides2offset@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-strides2order@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-numel@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-data-type@v0.1.0-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-order@v0.1.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-casting-mode@v0.1.1-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-allowed-data-type-cast@v0.1.0-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-buffer@v0.1.1-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-buffer-dtype@v0.1.0-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-dtype@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-shape@esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-strides@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-offset@esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-order@esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-data-buffer@esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/array-shape@v0.1.0-esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-flatten@v0.1.0-esm/index.mjs";import O from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import k from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@v0.1.1-esm/index.mjs";import z from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-integer@v0.1.1-esm/index.mjs";import V from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-defaults@v0.1.1-esm/index.mjs";import A from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-buffer-ctors@v0.1.0-esm/index.mjs";import B from"https://cdn.jsdelivr.net/gh/stdlib-js/buffer-alloc-unsafe@v0.1.0-esm/index.mjs";import D from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-arraylike2object@v0.1.0-esm/index.mjs";import M from"https://cdn.jsdelivr.net/gh/stdlib-js/complex-base-cast-return@v0.1.0-esm/index.mjs";import N from"https://cdn.jsdelivr.net/gh/stdlib-js/complex-ctors@v0.1.1-esm/index.mjs";import P from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ctor@v0.1.0-esm/index.mjs";import R from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-abs@v0.1.1-esm/index.mjs";function C(e){return"object"==typeof e&&null!==e&&"number"==typeof e.length&&z(e.length)&&e.length>=0&&e.length<k}function F(e,t,s){var r,n,i;if(r=A(s),"generic"===s)for(n=[],i=0;i<t;i++)n.push(e[i]);else if("binary"===s)for(n=B(t),i=0;i<t;i++)n[i]=e[i];else for(n=new r(t),i=0;i<t;i++)n[i]=e[i];return n}function _(e,t){var s;return s=new P(v(e),x(e),b(e),y(e),u(e),w(e)),"generic"===t?function(e){var t,s,r;for(t=e.length,s=[],r=0;r<t;r++)s.push(e.iget(r));return s}(s):"binary"===t?function(e){var t,s,r;for(t=e.length,s=B(t),r=0;r<t;r++)s[r]=e.iget(r);return s}(s):function(e,t){var s,r,n,i,o,d;if(r=new(A(t))(s=e.length),(o=D(r)).accessorProtocol)for(n=o.accessors[1],i=M((function(t){return e.iget(t)}),1,N(t)),d=0;d<s;d++)n(r,d,i(d));else for(d=0;d<s;d++)r[d]=e.iget(d);return r}(s,t)}function q(e,t,s){var r,n;for(r=[],n=0;n<s-e;n++)r.push(1);for(n=0;n<e;n++)r.push(t[n]);return r}function G(e,t,s,r){var n,i,o,d,a;if(a=e-(i=s.length),n=[],"row-major"===r){for(o=R(s[0])*t[a],d=0;d<a;d++)n.push(o);for(d=0;d<i;d++)n.push(s[d])}else{for(d=0;d<a;d++)n.push(1);for(d=0;d<i;d++)n.push(s[d])}return n}var H={casting:V.get("casting"),copy:!1,dtype:V.get("dtypes.default"),flatten:!0,mode:V.get("index_mode"),ndmin:0,order:V.get("order"),readonly:!1};function I(){var k,z,V,A,B,D,M,N,P,R,I,J,K,L;if(1===arguments.length)if(C(arguments[0]))V=arguments[0],k={};else{if(!t(k=arguments[0]))throw new TypeError(O("invalid argument. Must provide either a valid data source, options argument, or both. Value: `%s`.",k));if(e(k,"buffer")&&!C(V=k.buffer))throw new TypeError(O("invalid option. `%s` option must be an array-like object, typed-array-like, a Buffer, or an ndarray. Option: `%s`.","buffer",V))}else{if(!C(V=arguments[0]))throw new TypeError(O("invalid option. Data source must be an array-like object, typed-array-like, a Buffer, or an ndarray. Value: `%s`.",V));if(!t(k=arguments[1]))throw new TypeError(O("invalid argument. Options argument must be an object. Value: `%s`.",k))}if(V&&(i(V)?(M=v(V),L=!0):(M=g(V),L=!1)),R={},I={},e(k,"casting")){if(I.casting=k.casting,!h(I.casting))throw new TypeError(O("invalid option. `%s` option must be a recognized casting mode. Option: `%s`.","casting",I.casting))}else I.casting=H.casting;if(e(k,"flatten")){if(I.flatten=k.flatten,!s(I.flatten))throw new TypeError(O("invalid option. `%s` option must be a boolean. Option: `%s`.","flatten",I.flatten))}else I.flatten=H.flatten;if(e(k,"ndmin")){if(I.ndmin=k.ndmin,!n(I.ndmin))throw new TypeError(O("invalid option. `%s` option must be a nonnegative integer. Option: `%s`.","ndmin",I.ndmin))}else I.ndmin=H.ndmin;if(e(k,"dtype")){if(D=k.dtype,!p(D))throw new TypeError(O("invalid option. `%s` option must be a recognized data type. Option: `%s`.","dtype",D));if(M&&!j(M,D,I.casting))throw new Error(O("invalid option. Data type cast is not allowed. Casting mode: `%s`. From: `%s`. To: `%s`.",I.casting,M,D))}else D=M&&(L||"generic"!==M)?M:H.dtype;if(e(k,"order")){if("any"===(B=k.order)||"same"===B)L?"any"===B?B=3===a(y(V))?H.order:w(V):"same"===B&&(B=w(V)):B=H.order;else if(!f(B))throw new TypeError(O("invalid option. `%s` option must be a recognized order. Option: `%s`.","order",B))}else B=H.order;if(e(k,"mode")?R.mode=k.mode:R.mode=H.mode,e(k,"submode")?R.submode=k.submode:R.submode=[R.mode],e(k,"readonly")?R.readonly=k.readonly:R.readonly=H.readonly,e(k,"copy")){if(I.copy=k.copy,!s(I.copy))throw new TypeError(O("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",I.copy))}else I.copy=H.copy;if(e(k,"shape")){if(!C(N=k.shape))throw new TypeError(O("invalid option. `%s` option must be an array-like object containing nonnegative integers. Option: `%s`.","shape",N));P=N.length,K=m(N)}else{if(!V)throw new Error("invalid arguments. Must provide either a data source, array shape, or both.");L?(P=(N=b(V)).length,K=m(N)):I.flatten&&r(V)?(J=N=E(V),P=N.length,K=m(N)):(P=1,N=[K=V.length])}if(P<I.ndmin&&(N=q(P,N,I.ndmin),P=I.ndmin),L){if(m(V.shape)!==K)throw new RangeError("invalid arguments. Array shape is incompatible with provided data source. Number of data source elements does not match array shape.");M!==D||I.copy?V=_(V,D):(z=y(V),A=u(V),V=x(V),z.length<P&&(z=G(P,N,z,B)))}else if(V){if("generic"===M&&I.flatten&&(V=T(V,J||E(V),!1)),V.length!==K)throw new RangeError("invalid arguments. Array shape is incompatible with provided data source. Number of data source elements does not match array shape.");(M!==D||I.copy)&&(V=F(V,K,D))}else V=c(D,K);return void 0===z&&(z=o(N,B),A=d(N,z)),new l(D,V,N,z,A,B,R)}export{I as default};
//# sourceMappingURL=index.mjs.map
