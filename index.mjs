// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.0-esm/index.mjs";import{isPrimitive as s}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array@v0.2.0-esm/index.mjs";import{isPrimitive as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.2.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.2.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-shape2strides@v0.2.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-strides2offset@v0.2.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-strides2order@v0.2.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-numel@v0.2.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-data-type@v0.1.0-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-order@v0.2.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-casting-mode@v0.2.0-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-allowed-data-type-cast@v0.2.0-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-buffer@v0.2.0-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-buffer-dtype@v0.2.0-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-dtype@v0.1.0-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-shape@v0.2.0-esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-strides@v0.2.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-offset@v0.2.0-esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-order@v0.2.0-esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-data-buffer@v0.2.0-esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/array-shape@v0.2.0-esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-flatten@v0.1.0-esm/index.mjs";import O from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import k from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@v0.2.0-esm/index.mjs";import z from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-integer@v0.2.0-esm/index.mjs";import V from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-defaults@v0.2.0-esm/index.mjs";import A from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-buffer-ctors@v0.2.0-esm/index.mjs";import B from"https://cdn.jsdelivr.net/gh/stdlib-js/buffer-alloc-unsafe@v0.2.0-esm/index.mjs";import D from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-arraylike2object@esm/index.mjs";import M from"https://cdn.jsdelivr.net/gh/stdlib-js/complex-base-cast-return@v0.2.0-esm/index.mjs";import N from"https://cdn.jsdelivr.net/gh/stdlib-js/complex-ctors@v0.2.0-esm/index.mjs";import P from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-buffer-ctors@esm/index.mjs";import R from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ctor@esm/index.mjs";import C from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-dtype@esm/index.mjs";import F from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-strides@esm/index.mjs";import _ from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-offset@esm/index.mjs";import q from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-order@esm/index.mjs";import G from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-data-buffer@esm/index.mjs";import H from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-abs@esm/index.mjs";function I(e){return"object"==typeof e&&null!==e&&"number"==typeof e.length&&z(e.length)&&e.length>=0&&e.length<k}function J(e,t,s){var r,n,i;if(r=A(s),"generic"===s)for(n=[],i=0;i<t;i++)n.push(e[i]);else if("binary"===s)for(n=B(t),i=0;i<t;i++)n[i]=e[i];else for(n=new r(t),i=0;i<t;i++)n[i]=e[i];return n}function K(e,t){var s;return s=new R(C(e),G(e),b(e),F(e),_(e),q(e)),"generic"===t?function(e){var t,s,r;for(t=e.length,s=[],r=0;r<t;r++)s.push(e.iget(r));return s}(s):"binary"===t?function(e){var t,s,r;for(t=e.length,s=B(t),r=0;r<t;r++)s[r]=e.iget(r);return s}(s):function(e,t){var s,r,n,i,o,d;if(r=new(P(t))(s=e.length),(o=D(r)).accessorProtocol)for(n=o.accessors[1],i=M((function(t){return e.iget(t)}),1,N(t)),d=0;d<s;d++)n(r,d,i(d));else for(d=0;d<s;d++)r[d]=e.iget(d);return r}(s,t)}function L(e,t,s){var r,n;for(r=[],n=0;n<s-e;n++)r.push(1);for(n=0;n<e;n++)r.push(t[n]);return r}function Q(e,t,s,r){var n,i,o,d,a;if(a=e-(i=s.length),n=[],"row-major"===r){for(o=H(s[0])*t[a],d=0;d<a;d++)n.push(o);for(d=0;d<i;d++)n.push(s[d])}else{for(d=0;d<a;d++)n.push(1);for(d=0;d<i;d++)n.push(s[d])}return n}var S={casting:V.get("casting"),copy:!1,dtype:V.get("dtypes.default"),flatten:!0,mode:V.get("index_mode"),ndmin:0,order:V.get("order"),readonly:!1};function U(){var k,z,V,A,B,D,M,N,P,R,C,F,_,q;if(1===arguments.length)if(I(arguments[0]))V=arguments[0],k={};else{if(!t(k=arguments[0]))throw new TypeError(O("invalid argument. Must provide either a valid data source, options argument, or both. Value: `%s`.",k));if(e(k,"buffer")&&!I(V=k.buffer))throw new TypeError(O("invalid option. `%s` option must be an array-like object, typed-array-like, a Buffer, or an ndarray. Option: `%s`.","buffer",V))}else{if(!I(V=arguments[0]))throw new TypeError(O("invalid option. Data source must be an array-like object, typed-array-like, a Buffer, or an ndarray. Value: `%s`.",V));if(!t(k=arguments[1]))throw new TypeError(O("invalid argument. Options argument must be an object. Value: `%s`.",k))}if(V&&(i(V)?(M=g(V),q=!0):(M=v(V),q=!1)),R={},C={},e(k,"casting")){if(C.casting=k.casting,!h(C.casting))throw new TypeError(O("invalid option. `%s` option must be a recognized casting mode. Option: `%s`.","casting",C.casting))}else C.casting=S.casting;if(e(k,"flatten")){if(C.flatten=k.flatten,!s(C.flatten))throw new TypeError(O("invalid option. `%s` option must be a boolean. Option: `%s`.","flatten",C.flatten))}else C.flatten=S.flatten;if(e(k,"ndmin")){if(C.ndmin=k.ndmin,!n(C.ndmin))throw new TypeError(O("invalid option. `%s` option must be a nonnegative integer. Option: `%s`.","ndmin",C.ndmin))}else C.ndmin=S.ndmin;if(e(k,"dtype")){if(D=k.dtype,!p(D))throw new TypeError(O("invalid option. `%s` option must be a recognized data type. Option: `%s`.","dtype",D));if(M&&!j(M,D,C.casting))throw new Error(O("invalid option. Data type cast is not allowed. Casting mode: `%s`. From: `%s`. To: `%s`.",C.casting,M,D))}else D=M&&(q||"generic"!==M)?M:S.dtype;if(e(k,"order")){if("any"===(B=k.order)||"same"===B)q?"any"===B?B=3===a(y(V))?S.order:x(V):"same"===B&&(B=x(V)):B=S.order;else if(!f(B))throw new TypeError(O("invalid option. `%s` option must be a recognized order. Option: `%s`.","order",B))}else B=S.order;if(e(k,"mode")?R.mode=k.mode:R.mode=S.mode,e(k,"submode")?R.submode=k.submode:R.submode=[R.mode],e(k,"readonly")?R.readonly=k.readonly:R.readonly=S.readonly,e(k,"copy")){if(C.copy=k.copy,!s(C.copy))throw new TypeError(O("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",C.copy))}else C.copy=S.copy;if(e(k,"shape")){if(!I(N=k.shape))throw new TypeError(O("invalid option. `%s` option must be an array-like object containing nonnegative integers. Option: `%s`.","shape",N));P=N.length,_=m(N)}else{if(!V)throw new Error("invalid arguments. Must provide either a data source, array shape, or both.");q?(P=(N=b(V)).length,_=m(N)):C.flatten&&r(V)?(F=N=E(V),P=N.length,_=m(N)):(P=1,N=[_=V.length])}if(P<C.ndmin&&(N=L(P,N,C.ndmin),P=C.ndmin),q){if(m(V.shape)!==_)throw new RangeError("invalid arguments. Array shape is incompatible with provided data source. Number of data source elements does not match array shape.");M!==D||C.copy?V=K(V,D):(z=y(V),A=u(V),V=w(V),z.length<P&&(z=Q(P,N,z,B)))}else if(V){if("generic"===M&&C.flatten&&(V=T(V,F||E(V),"column-major"===B)),V.length!==_)throw new RangeError("invalid arguments. Array shape is incompatible with provided data source. Number of data source elements does not match array shape.");(M!==D||C.copy)&&(V=J(V,_,D))}else V=c(D,_);return void 0===z&&(z=o(N,B),A=d(N,z)),new l(D,V,N,z,A,B,R)}export{U as default};
//# sourceMappingURL=index.mjs.map
